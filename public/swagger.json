{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IRate": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"perMonth": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"perMonth"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICompany": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"tin": {
						"type": "string"
					},
					"login": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"currencySymbol": {
						"type": "string"
					},
					"currency_symbol": {
						"type": "string"
					},
					"timezone": {
						"type": "string"
					},
					"lang": {
						"type": "string"
					},
					"utcDiff": {
						"type": "number",
						"format": "double"
					},
					"balance": {
						"type": "number",
						"format": "double"
					},
					"rateId": {
						"type": "number",
						"format": "double"
					},
					"created": {
						"type": "string"
					},
					"nextPayment": {
						"type": "string"
					},
					"perMonth": {
						"type": "number",
						"format": "double"
					},
					"rate": {
						"$ref": "#/components/schemas/IRate"
					},
					"langs": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"title",
					"tin",
					"login",
					"email",
					"lang"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EPaymentStatuses": {
				"enum": [
					"new",
					"paid",
					"error"
				],
				"type": "string"
			},
			"EPaymentTypes": {
				"enum": [
					"deposit",
					"withdraw"
				],
				"type": "string"
			},
			"IPayment": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/EPaymentStatuses"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"companyId": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/EPaymentTypes"
					}
				},
				"required": [
					"id",
					"date",
					"status",
					"amount",
					"companyId",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICategory": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"company_id": {
						"type": "number",
						"format": "double"
					},
					"sort": {
						"type": "number",
						"format": "double"
					},
					"translations": {
						"items": {
							"properties": {
								"n": {
									"type": "string"
								},
								"t": {
									"type": "string"
								},
								"l": {
									"type": "string"
								}
							},
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ITranslate": {
				"properties": {
					"l": {
						"type": "string"
					},
					"n": {
						"type": "string"
					},
					"t": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IVariantOrOptionForPosition": {
				"properties": {
					"n": {
						"type": "string"
					},
					"p": {
						"type": "number",
						"format": "double"
					},
					"q": {
						"type": "number",
						"format": "double"
					},
					"t": {
						"items": {
							"$ref": "#/components/schemas/ITranslate"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EPriority": {
				"enum": [
					"FIRST",
					"SECOND"
				],
				"type": "string"
			},
			"IPositionForOrder": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"n": {
						"type": "string"
					},
					"p": {
						"type": "number",
						"format": "double"
					},
					"crt": {
						"type": "number",
						"format": "double"
					},
					"f": {
						"type": "number",
						"format": "double"
					},
					"t": {
						"items": {
							"$ref": "#/components/schemas/ITranslate"
						},
						"type": "array"
					},
					"v": {
						"$ref": "#/components/schemas/IVariantOrOptionForPosition"
					},
					"o": {
						"items": {
							"$ref": "#/components/schemas/IVariantOrOptionForPosition"
						},
						"type": "array"
					},
					"c": {
						"type": "string"
					},
					"i": {
						"type": "number",
						"format": "double"
					},
					"d": {
						"type": "number",
						"format": "double"
					},
					"cat": {
						"type": "number",
						"format": "double"
					},
					"pr": {
						"$ref": "#/components/schemas/EPriority"
					}
				},
				"required": [
					"cat"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrder": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"n": {
						"type": "number",
						"format": "double"
					},
					"t": {
						"type": "number",
						"format": "double"
					},
					"p": {
						"items": {
							"$ref": "#/components/schemas/IPositionForOrder"
						},
						"type": "array"
					},
					"c": {
						"type": "string"
					},
					"crt": {
						"type": "number",
						"format": "double"
					},
					"d": {
						"type": "number",
						"format": "double"
					},
					"f": {
						"type": "number",
						"format": "double"
					},
					"m": {
						"type": "string"
					}
				},
				"required": [
					"t",
					"p",
					"c"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IItem": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"company": {
						"type": "number",
						"format": "double"
					},
					"cat": {
						"type": "number",
						"format": "double"
					},
					"c": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string"
							}
						]
					},
					"s": {
						"type": "number",
						"format": "double"
					},
					"n": {
						"type": "string"
					},
					"p": {
						"type": "number",
						"format": "double"
					},
					"d": {
						"type": "string"
					},
					"i": {
						"type": "string"
					},
					"a": {
						"type": "boolean"
					},
					"h": {
						"type": "boolean"
					},
					"v": {
						"items": {
							"properties": {
								"p": {
									"type": "number",
									"format": "double"
								},
								"n": {
									"type": "string"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"o": {
						"items": {
							"properties": {
								"p": {
									"type": "number",
									"format": "double"
								},
								"n": {
									"type": "string"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"t": {
						"items": {
							"properties": {
								"n": {
									"type": "string"
								},
								"t": {
									"type": "string"
								},
								"l": {
									"type": "string"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"vt": {
						"items": {
							"items": {
								"properties": {
									"n": {
										"type": "string"
									},
									"t": {
										"type": "string"
									},
									"l": {
										"type": "string"
									}
								},
								"type": "object"
							},
							"type": "array"
						},
						"type": "array"
					},
					"ot": {
						"items": {
							"items": {
								"properties": {
									"n": {
										"type": "string"
									},
									"t": {
										"type": "string"
									},
									"l": {
										"type": "string"
									}
								},
								"type": "object"
							},
							"type": "array"
						},
						"type": "array"
					},
					"f": {
						"type": "string"
					},
					"fChanged": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IAllPositionsForKitchen": {
				"properties": {
					"tab": {
						"type": "number",
						"format": "double"
					},
					"c": {
						"type": "string"
					},
					"oc": {
						"type": "string"
					},
					"i": {
						"type": "number",
						"format": "double"
					},
					"cat": {
						"type": "number",
						"format": "double"
					},
					"crt": {
						"type": "number",
						"format": "double"
					},
					"ocrt": {
						"type": "number",
						"format": "double"
					},
					"f": {
						"type": "number",
						"format": "double"
					},
					"n": {
						"type": "string"
					},
					"t": {
						"$ref": "#/components/schemas/ITranslate"
					},
					"v": {
						"$ref": "#/components/schemas/IVariantOrOptionForPosition"
					},
					"o": {
						"items": {
							"$ref": "#/components/schemas/IVariantOrOptionForPosition"
						},
						"type": "array"
					},
					"on": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"v",
					"o"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IMethod": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IPeriodStats": {
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"summary": {
						"items": {
							"properties": {
								"paymentMethod": {
									"type": "string"
								},
								"summ": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"paymentMethod",
								"summ"
							],
							"type": "object"
						},
						"type": "array"
					},
					"total": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"count",
					"summary",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ETableType": {
				"enum": [
					"table_s",
					"table_c",
					"wall",
					"flower",
					"door",
					"window",
					"kitchen",
					"grass",
					"pavilion",
					"chair",
					"info",
					"trash",
					"wc",
					"bar",
					"play",
					"music",
					"tree",
					"light",
					"storage"
				],
				"type": "string"
			},
			"ITable": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"number": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"x": {
						"type": "number",
						"format": "double"
					},
					"y": {
						"type": "number",
						"format": "double"
					},
					"for_order": {
						"type": "boolean"
					},
					"w": {
						"type": "number",
						"format": "double"
					},
					"h": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/ETableType"
					},
					"company_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"x",
					"y",
					"for_order",
					"w",
					"h",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EUserTypes": {
				"enum": [
					"admin",
					"personal",
					"manager",
					"kitchen"
				],
				"type": "string"
			},
			"IUser": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"login": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/EUserTypes"
					},
					"company_id": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IWhoAmI": {
				"properties": {
					"company": {
						"properties": {
							"langs": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"lang": {
								"type": "string"
							},
							"symbol": {
								"type": "string"
							},
							"email": {
								"type": "string"
							},
							"title": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"lang",
							"symbol",
							"email",
							"title",
							"id"
						],
						"type": "object"
					},
					"user": {
						"properties": {
							"login": {
								"type": "string"
							},
							"type": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"login",
							"type",
							"name",
							"id"
						],
						"type": "object"
					}
				},
				"required": [
					"company",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"Bearer": {
				"type": "apiKey",
				"in": "header",
				"name": "Authorization"
			}
		}
	},
	"info": {
		"title": "rests",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "sobogd ",
			"email": "sobogd@gmail.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth-hash": {
			"post": {
				"operationId": "Auth",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"type": "string"
										},
										"loginHash": {
											"type": "string"
										},
										"token": {
											"type": "string"
										}
									},
									"required": [
										"name",
										"loginHash",
										"token"
									],
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"hash": {
										"type": "string"
									}
								},
								"required": [
									"hash"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth": {
			"post": {
				"operationId": "Auth",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"type": "string"
										},
										"loginHash": {
											"type": "string"
										},
										"token": {
											"type": "string"
										}
									},
									"required": [
										"name",
										"loginHash",
										"token"
									],
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"login": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"login"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/billing/update-company-info": {
			"post": {
				"operationId": "UpdateCompanyInfo",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ICompany"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"BillingService"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/billing/make-payment": {
			"post": {
				"operationId": "MakePayment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token": {
											"type": "string"
										}
									},
									"required": [
										"token"
									],
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"BillingService"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"amount": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"amount"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/billing/payments-list": {
			"post": {
				"operationId": "PaymentsList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IPayment"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"BillingService"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/billing/make-monthly-payment-and-update-company": {
			"post": {
				"operationId": "MakeMonthlyPaymentAndUpdateCompany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"BillingService"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"companyId": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"companyId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/billing/success-payment": {
			"post": {
				"operationId": "SuccessPayment",
				"responses": {
					"204": {
						"description": "No content"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"BillingService"
				],
				"security": [],
				"parameters": []
			}
		},
		"/billing/failed-payment": {
			"post": {
				"operationId": "FailedPayment",
				"responses": {
					"204": {
						"description": "No content"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"BillingService"
				],
				"security": [],
				"parameters": []
			}
		},
		"/categories": {
			"post": {
				"operationId": "Categories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ICategory"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/category-create": {
			"post": {
				"operationId": "Create",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICategory"
							}
						}
					}
				}
			}
		},
		"/category-remove": {
			"post": {
				"operationId": "CategoryRemove",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/category-update": {
			"post": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICategory"
							}
						}
					}
				}
			}
		},
		"/category": {
			"post": {
				"operationId": "Category",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ICategory"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/company-update": {
			"post": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICompany"
							}
						}
					}
				}
			}
		},
		"/company": {
			"post": {
				"operationId": "Company",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ICompany"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/day-stats": {
			"post": {
				"operationId": "DayStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IOrder"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"day": {
										"type": "string"
									}
								},
								"required": [
									"day"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/": {
			"get": {
				"operationId": "Root",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"type": "string"
										}
									},
									"required": [
										"name"
									],
									"type": "object"
								}
							}
						}
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"GeneralService"
				],
				"security": [],
				"parameters": []
			}
		},
		"/item-create": {
			"post": {
				"operationId": "Create",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IItem"
							}
						}
					}
				}
			}
		},
		"/item-remove": {
			"post": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"itemId": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"itemId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/item-update": {
			"post": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IItem"
							}
						}
					}
				}
			}
		},
		"/item": {
			"post": {
				"operationId": "Item",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IItem"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"itemId": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"itemId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/items": {
			"post": {
				"operationId": "Items",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IItem"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IItem"
							}
						}
					}
				}
			}
		},
		"/k/list-categories-for-filter": {
			"get": {
				"operationId": "List categories for filter",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"i": {
												"type": "number",
												"format": "double"
											},
											"n": {
												"type": "string"
											}
										},
										"required": [
											"i",
											"n"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"K"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/k/list-positions-by-categories": {
			"get": {
				"operationId": "List positions by categories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IAllPositionsForKitchen"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"K"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/k/done-position": {
			"post": {
				"operationId": "Done position",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"K"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"positionIndex": {
										"type": "number",
										"format": "double"
									},
									"orderNumber": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"positionIndex",
									"orderNumber"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/k/restart-position": {
			"post": {
				"operationId": "Restart position",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"K"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"positionIndex": {
										"type": "number",
										"format": "double"
									},
									"orderNumber": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"positionIndex",
									"orderNumber"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/method-create": {
			"post": {
				"operationId": "MethodCreate",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMethod"
							}
						}
					}
				}
			}
		},
		"/method-delete": {
			"post": {
				"operationId": "MethodDelete",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/method-update": {
			"post": {
				"operationId": "MethodUpdate",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMethod"
							}
						}
					}
				}
			}
		},
		"/method": {
			"post": {
				"operationId": "Method",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IMethod"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/methods": {
			"post": {
				"operationId": "Methods",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IMethod"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/o/list-categories-with-positions": {
			"get": {
				"operationId": "List categories with positions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"i": {
												"items": {
													"$ref": "#/components/schemas/IItem"
												},
												"type": "array"
											},
											"c": {
												"type": "string"
											}
										},
										"required": [
											"i",
											"c"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"O"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/o/add-or-update-order": {
			"post": {
				"operationId": "Add or update order",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"O"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IOrder"
							}
						}
					}
				}
			}
		},
		"/o/list-orders-for-table": {
			"post": {
				"operationId": "List orders for table",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IOrder"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"O"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"tableId": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"tableId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/o/order-by-number": {
			"post": {
				"operationId": "Order by number",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IOrder"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"O"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"orderNumber": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"orderNumber"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/o/remove-order-by-number": {
			"post": {
				"operationId": "Remove order by number",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"O"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"orderNumber": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"orderNumber"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/o/finish-order-by-number": {
			"post": {
				"operationId": "Finish order by number",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"O"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"paymentMethod": {
										"type": "string"
									},
									"orderNumber": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"paymentMethod",
									"orderNumber"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/o/tables-with-orders": {
			"get": {
				"operationId": "Tables with orders",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"f": {
												"type": "boolean"
											},
											"t": {
												"type": "number",
												"format": "double"
											}
										},
										"required": [
											"t"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"tags": [
					"O"
				],
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/order-return": {
			"post": {
				"operationId": "OrderReturn",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/period-stats": {
			"post": {
				"operationId": "PeriodStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPeriodStats"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"dayEnd": {
										"type": "string"
									},
									"dayStart": {
										"type": "string"
									}
								},
								"required": [
									"dayEnd",
									"dayStart"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/registration": {
			"post": {
				"operationId": "Registration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"login": {
											"type": "string"
										}
									},
									"required": [
										"login"
									],
									"type": "object"
								}
							}
						}
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"currency": {
										"type": "string"
									},
									"lang": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"tin": {
										"type": "string"
									},
									"login": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"currency",
									"lang",
									"password",
									"tin",
									"login",
									"title",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/table-create": {
			"post": {
				"operationId": "TableCreate",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ITable"
							}
						}
					}
				}
			}
		},
		"/table-delete": {
			"post": {
				"operationId": "TableDelete",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/table-update": {
			"post": {
				"operationId": "TableUpdate",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ITable"
							}
						}
					}
				}
			}
		},
		"/tables": {
			"post": {
				"operationId": "Tables",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ITable"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/user-create": {
			"post": {
				"operationId": "UserCreate",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUser"
							}
						}
					}
				}
			}
		},
		"/user-delete": {
			"post": {
				"operationId": "UserDelete",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/user-update": {
			"post": {
				"operationId": "UserUpdate",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUser"
							}
						}
					}
				}
			}
		},
		"/user": {
			"post": {
				"operationId": "User",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/users": {
			"post": {
				"operationId": "Users",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IUser"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		},
		"/whoami": {
			"post": {
				"operationId": "Whoami",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IWhoAmI"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized request response"
					},
					"500": {
						"description": "Response with error"
					}
				},
				"security": [
					{
						"Bearer": [
							"AuthService"
						]
					}
				],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}